name: glauth
base: bare
build-base: ubuntu@22.04
version: "2.4.0"
summary: GLAuth
description: |
  GLAuth LDAP authentication server
license: Apache-2.0
run-user: _daemon_
platforms:
  amd64:
services:
  glauth:
    override: replace
    command: glauth -c /etc/config/glauth.cfg
    startup: enabled
parts:
  config:
    plugin: dump
    source: ./config
    source-type: local
    organize:
      glauth.cfg: etc/config/
    stage:
      - etc/config/glauth.cfg
  libc:
    plugin: nil
    stage-packages:
      - libc6_libs
  glauth:
    plugin: make
    build-snaps:
      - go/1.23/stable
    source: https://github.com/glauth/glauth
    source-type: git
    source-tag: v2.4.0
    source-subdir: v2
    override-pull: |
      git config --global url."https://github.com/".insteadOf git@github.com:
      git config -l
      craftctl default
    override-build: |
      export GOARCH=$(go env GOARCH)

      echo "###### patch CVEs #######"
      cd $CRAFT_PART_SRC_WORK
      go get -u golang.org/x/crypto@v0.35.0
      go get -u golang.org/x/net@v0.38.0
      go get -u google.golang.org/protobuf@v1.33.0
      cd -
      echo "#########################"

      U=https://github.com/glauth/glauth-postgres \
        M=pkg/plugins/glauth-postgres \
        make -C $CRAFT_PART_SRC_WORK pull-plugin-dependencies

      PLUGIN_ARCH=$GOARCH \
        make -C $CRAFT_PART_SRC_WORK -j$CRAFT_PARALLEL_BUILD_COUNT \
        plugin_postgres_linux_$GOARCH linux$GOARCH

      mkdir -p $CRAFT_PART_INSTALL/bin
      cp -r $CRAFT_PART_SRC_WORK/bin/*/{glauth,postgres.so} \
        $CRAFT_PART_INSTALL/bin/
    stage:
      - bin/glauth
      - bin/postgres.so
  deb-security-manifest:
    plugin: nil
    after:
      - libc
    override-prime: |
      set -x
      mkdir -p $CRAFT_PRIME/usr/share/rocks/
      (echo "# os-release" && cat /etc/os-release && echo "# dpkg-query" && dpkg-query --admindir=$CRAFT_PRIME/var/lib/dpkg/ -f '${db:Status-Abbrev},${binary:Package},${Version},${source:Package},${Source:Version}\n' -W) > $CRAFT_PRIME/usr/share/rocks/dpkg.query
